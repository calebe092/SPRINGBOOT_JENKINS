pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                dir('jenkins') {
                    sh 'mvn clean package'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerapp = docker.build("docjv/jenkins_api:${env.BUILD_ID}", '-f jenkins/Dockerfile jenkins/')
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        dockerapp.push('latest')
                        dockerapp.push("${env.BUILD_ID}")
                    }
                }
            }
        }
       /*
        stage('Deploy no Kubernetes') {
            environment {
                tag_version = "${env.BUILD_ID}"
            }
            steps {
                dir('jenkins/k8s') {
                    withKubeConfig([credentialsId: 'kubeconfig']) {
                        sh "sed -i 's/{{TAG}}/${tag_version}/g' deployment.yaml"
                        sh 'kubectl apply -f deployment.yaml'
                    }
                }
            }
        }*/
    }
}
